@using DevExtreme.AspNet.Mvc
@using Nop.Plugin.Misc.Invoice.Models
@model InvoiceSell
@{
    Layout = "_ColumnsOne";
}
@await  Html.PartialAsync("~/Plugins/Misc.Invoice/Views/_UiPartial.cshtml")


<form id="invoiceFrom" action="/Invoice/Create">

    <div class="row">
        <div class="col-md-4">
            <div>

                @(Html.DevExtreme().TextBoxFor(i=>i.DateH).Label("Date H")
                .LabelMode(EditorLabelMode.Floating))
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().DateBoxFor(i=>i.DateG).Label("Date G")
                .LabelMode(EditorLabelMode.Floating))
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().TextBoxFor(i=>i.InvoiceNo).Label("Invoice No")
                .LabelMode(EditorLabelMode.Floating))
            </div>
        </div>


        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().TextBoxFor(i=>i.EName).Label("E Name")
                .LabelMode(EditorLabelMode.Floating))
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().TextBoxFor(i=>i.MainContact1).Label("Main Contact 1")
                .LabelMode(EditorLabelMode.Floating))
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().TextBoxFor(i=>i.AName).Label("A Name")
                .LabelMode(EditorLabelMode.Floating))
            </div>
        </div>


        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().TextBoxFor(i=>i.InvoiceVatid).Label("Invoice Vatid")
                .LabelMode(EditorLabelMode.Floating))
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">

                @(Html.DevExtreme().TextBoxFor(i=>i.ClientVendorNo).Label("Client Vendor No")
                .LabelMode(EditorLabelMode.Floating))
            </div>
        </div>

        <hr style="width:100%" />

        <div class="col-md-12">
            @(Html.DevExtreme().DataGrid<InvoiceSellIUnit>().ID("UnitItems")
            .DataSource(Model.InvoiceSellIUnits)
            .RemoteOperations(true).ShowColumnLines(true)
            .Scrolling(s => s
            .Mode(GridScrollingMode.Virtual)
            .RowRenderingMode(GridRowRenderingMode.Virtual)
            )
            .Paging(p => p.PageSize(100))
            .HeaderFilter(f => f.Visible(true))
            .WordWrapEnabled(true)
            .Height(440)
            .ShowRowLines(true)
            .RowAlternationEnabled(true)
            .ShowBorders(true)
            .Editing(editing => {
            editing.Mode(GridEditMode.Row);
            editing.AllowAdding(true);
            editing.AllowDeleting(true);
            editing.AllowUpdating(true);
            })
            .Columns(columns => {
            columns.AddFor(m => m.OrderNo).Caption("Order No");
            columns.AddFor(m => m.ItemNo).Caption("Item No");
            columns.AddFor(m => m.EName).Caption("E Name");
            columns.AddFor(m => m.AName).Caption("A Name");
            columns.AddFor(m => m.UnitNo).Caption("Unit No");
            columns.AddFor(m => m.Price).Caption("Price").DataType(GridColumnDataType.Number);
            columns.AddFor(m => m.Quantity).Caption("Quantity");
            columns.AddFor(m => m.Discount).Caption("Discount");
            columns.AddFor(m => m.Total).Caption("Total").AllowEditing(false);
            columns.AddFor(m => m.TaxRate1Percentage).Caption("Tax Rate 1 Percentage");
            columns.AddFor(m => m.TaxRate1Total).Caption("Tax Rate 1 Total").AllowEditing(false);;
            columns.AddFor(m => m.TotalPlusTax).Caption("Total Plus Tax").AllowEditing(false);;



            }).FilterRow(f => f.Visible(true))
          
            .HeaderFilter(f => f.Visible(true))
            )


        </div>




        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.SubNetTotalPlusTax).Label("Sub Net Total Plus Tax")
            .LabelMode(EditorLabelMode.Static))
        </div>
        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.TaxRate1Total).Label("Tax Rate1 Total")
            .LabelMode(EditorLabelMode.Static))
        </div>
        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.SubNetTotal).Label("Sub Net Total")
            .LabelMode(EditorLabelMode.Static))
        </div>
        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.SubTotalDiscount).Label("Sub Total Discount")
            .LabelMode(EditorLabelMode.Static))
        </div>
        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.SubQuantity).Label("Sub Quantity")
            .LabelMode(EditorLabelMode.Static))
        </div>
        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.AmountLeftAfterAllBills).Label("Amount Left After All Bills")
            .LabelMode(EditorLabelMode.Static))
        </div>

        <div class="col-md-2  mt-1">
            @(Html.DevExtreme().TextBoxFor(i=>i.AmountLeft).Label("Amount Left")
            .LabelMode(EditorLabelMode.Static))
        </div>








        <span class="m-10" style="
    display: block;
    margin: 10px 10px;
">
            @(Html.DevExtreme().Button().Text("Save").Type(ButtonType.Normal).StylingMode(ButtonStylingMode.Contained).
            Width(200).UseSubmitBehavior(true))
        </span>
    </div>
</form>
<script>
  

    $(document).ready(function() {
        var data;
         $('#UnitItems').dxDataGrid('instance').on("rowUpdating", function(e){
		 console.log(e)
		 var qty=e.oldData.Quantity;
		 var price=e.oldData.Price;
		 var discount=e.oldData.Discount;
		 var taxRate=e.oldData.TaxRate1Percentage;
		 if(e.newData.Price){
		 price=e.newData.Price;
		 }
		  if(e.newData.Quantity){
		 qty=e.newData.Quantity;
		 }
		  if(e.newData.Discount){
		 discount=e.newData.Discount;
		 }
		 
		 if(e.newData.TaxRate1Percentage){
		 taxRate=e.newData.TaxRate1Percentage;
		 }
		 
		 var total=(price * qty)-discount;
		 var taxtotal=total*(taxRate/100);
		 e.newData['Total']=total
		  e.newData['TaxRate1Total']=taxtotal;
		   e.newData['TotalPlusTax']=total+taxtotal;
		 
		 }).on("rowInserting", function(e){
		 console.log(e)
		 var qty=e.data.Quantity;
		 var price=e.data.Price;
		 var discount=e.data.Discount;
		 var taxRate=e.data.TaxRate1Percentage;
		console.log(price,qty,discount)
		 
		 var total=(price * qty)-discount;
		 var taxtotal=total*(taxRate/100);
		 e.data['Total']=total
		  e.data['TaxRate1Total']=taxtotal;
		   e.data['TotalPlusTax']=total+taxtotal;
		
		 }).on('rowInserted',function(){ updateTotals()}).on('rowUpdated',function(){ updateTotals()});
		function updateTotals(){
		
		var grid = $('#UnitItems').dxDataGrid('instance');
            var dataItems = grid.getDataSource().items();
			var SubNetTotalPlusTax=0
            var TaxRate1Total=0
			var SubNetTotal =0
			var SubTotalDiscount=0 
			var SubQuantity =0
			var AmountLeftAfterAllBills=0
            var AmountLeft=0
			
			
			dataItems.forEach((item)=>{
			
			SubNetTotalPlusTax+=item.TotalPlusTax;
			
			
             TaxRate1Total+=item.TotalPlusTax;
			 SubNetTotal +=item.Total;
			 SubTotalDiscount+=item.Discount;
			 SubQuantity +=item.Quantity;
			 AmountLeftAfterAllBills+=item.TotalPlusTax;
             AmountLeft+=item.TotalPlusTax;
			 
			 
			
			})
			
		$("#SubNetTotalPlusTax").val(SubNetTotalPlusTax);
		$("#TaxRate1Total").val(TaxRate1Total);
		$("#SubNetTotal").val(SubNetTotal);
		$("#SubTotalDiscount").val(SubTotalDiscount);
		$("#SubQuantity").val(SubQuantity);
		$("#AmountLeftAfterAllBills").val(SubNetTotalPlusTax);
		$("#AmountLeft").val(SubNetTotalPlusTax);
		
		
		
		}
        $("#invoiceFrom").submit(function(event) {

            event.preventDefault();

            var $formdata = $(this);
            var serializedData = $formdata.serializeArray();
            var f = {};
            serializedData.forEach(element => {
                f[element.name] = element.value;
            });

            var grid = $('#UnitItems').dxDataGrid('instance');
            var dataItems = grid.getDataSource().items();
           
            f['InvoiceSellIUnits'] = dataItems;
            console.log(f)



            $.ajax({
                url: '/invoice/Create?id=@ViewBag.id',
                type: "POST",
                dataType: 'json',
                contentType: "application/json",
                data: JSON.stringify(f),
                success: function(result) {
                    window.location.href = "/Invoice/index"
                },
                error: function(xhr, resp, text) {
                    console.log(xhr, resp, text);
                }
            })
        })
    })

</script>